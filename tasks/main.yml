---
- import_tasks: redhat.yml
  become: yes
  when: ansible_os_family == 'RedHat'

- import_tasks: debian.yml
  become: yes
  when: ansible_os_family == 'Debian'

- name: Create user font directory if it does not exist
  ansible.builtin.file:
    path: "{{ config_owner }}/.local/share/fonts"
    state: directory
    owner: "{{ config_owner }}"
    group: "{{ config_owner_primary_group }}"
    mode: '0750'

- name: Install nerd font
  ansible.builtin.get_url:
    url: "{{ nerd_font_url }}/{{ nerd_font_file | urlencode() }}"
    dest: "{{ config_owner }}/.local/share/fonts/{{ nerd_font_file }}"
    owner: "{{ config_owner }}"
    group: "{{ config_owner_primary_group }}"
    mode: '0644'
  changed_when: False

- name: Install extensions
  ansible.builtin.command: "/usr/bin/code --install-extension {{ item }}"
  loop: "{{ vscode_extensions | flatten }}"
  become: yes
  become_user: "{{ config_owner }}"
  when: vscode_use_extensions is defined and vscode_use_extensions
  changed_when: False

- name: Create vscode config directory if it does not exist
  ansible.builtin.file:
    path: "{{ config_owner }}/.config/Code/User"
    state: directory
    owner: "{{ config_owner }}"
    group: "{{ config_owner_primary_group }}"
    mode: '0750'
  when: vscode_use_config is defined and vscode_use_config

- name: Install config file
  ansible.builtin.template:
    src: settings.json.j2
    dest: "{{ config_owner }}/.config/Code/User/settings.json.j2"
    owner: "{{ config_owner }}"
    group: "{{ config_owner_primary_group }}"
    mode: '0755'
  when: vscode_use_config is defined and vscode_use_config
